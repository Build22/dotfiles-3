# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh

export DISABLE_AUTO_UPDATE="true"

export BUNDLER_EDITOR='mvim'

# Prevent correct of git slog
alias rspec='nocorrect rspec'
alias git='nocorrect git'
alias guard='nocorrect guard'
alias be='bundle exec'

# Fix up octopress rake issue
alias rake="noglob rake"

# automatically pushd
setopt auto_pushd
export dirstacksize=10
alias lsd='dirs -v'
alias cld='cd +1'
function csd() { cd +$1 }

# Zsh theme, loaded from ~/.oh-my-zsh/themese. Set to 'random' for fun
export ZSH_THEME="cjt"

## case-insensitive (all),partial-word and then substring completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' \
    'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Quick jumping to ~/code & $HOME directories
c(){cd ~/code/$1;}
compctl -W ~/code -/ c
home(){cd ~/$1;}
compctl -W ~/ -/ home

# List all symlinks in current directory #TODO where do they point?
lns() {
    find ./ -type l -maxdepth 1 | awk '{ sub(/.\/+/, ""); print }'
}
lnsm() {
    find -L ./ -maxdepth 1 -type l | awk '{ sub(/.\/+/, ""); print }'
}

# Growl notify function
function growl {
    growlnotify -s "That long running thing is done" -m "Finished!" 
}

function mkcd() {
    mkdir $1 && cd $1
}

function gitup {
    if git rev-parse --git-dir > /dev/null 2>&1; then
        cd "./"$(git rev-parse --show-cdup)
    else
        return
    fi
}

function gitcount {
    commit_count=`git log --pretty=oneline | wc -l | awk '{print $1}'`
    echo "  -> Total commits to date: $commit_count"
}

function gitopen {
    url=`git remote show origin | grep 'Fetch' | sed 's/.*git:\/\/\(.*\).git$/http:\/\/\1/'`
    open $url
}

function gitlag {
    lag=`git fetch && git log --pretty=oneline master..origin/master | wc -l | awk '{print $1}'`
    echo "Master branch currently behind by $lag commits"
}

# Convenice aliases
alias ls="ls -FG"
alias la="ls -la"

alias ez='vim ~/.zshrc'
alias sz='source ~/.zshrc'

alias jp='python -mjson.tool'


# Markdown preview to html with local css
function mkd2tmphtml {
    tempfile="/tmp/$$.html";
    pandoc $1 -t html -c $HOME/.pandoc-mkd-style.css > $tempfile;
    open $tempfile;
    return 0;
}

# Do not autoupdate tmux window titles
export DISABLE_AUTO_TITLE="true"

# Tmux aliases
alias tls="tmux list-sessions"
alias tka="tmux kill-session"
function ta {
    if [ -z "$1" ]; then
        tmux attach
    else
        tmux attach -t $session_name
    fi
}
function tn {
    if [ -z "$1" ]; then
        session_name=$(basename `pwd`)
    else
        session_name=$1
    fi
    tmux new -s $session_name
}
alias stm="script/tmux-rails"

# Some fun with switching the foreground terminal process
# Use Ctrl-z to freeze current fg process (ie vim), do something else
# in the shell, ie manpage lookup, then use Ctrl-g to get back to vim
# ref: http://oinopa.com/2010/10/24/laptop-driven-development.html
# TODO Get Ctrl-f set as the freeze command
export HISTIGNORE="fg*"
bindkey -s '\C-g' 'fg\n'
# bind '"\C-g": "fg %-\n"'  ----The Bash way

# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git git-flow rvm zsh-syntax-highlighting vagrant)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
export PATH=$HOME/local/bin:$PATH:$HOME/mbin:/Users/nation/.rvm/gems/ruby-1.9.2-p0@rails3/bin:/Users/nation/.rvm/gems/ruby-1.9.2-p0@global/bin:/Users/nation/.rvm/rubies/ruby-1.9.2-p0/bin:/Users/nation/.rvm/bin:/Users/nation/bin:/usr/local/mysql/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/git/bin:/usr/X11/bin

# use .localrc for settings specific to one system
[[ -f ~/.localrc ]] && . ~/.localrc

[[ -s $HOME/.rvm/scripts/rvm ]] && source $HOME/.rvm/scripts/rvm
