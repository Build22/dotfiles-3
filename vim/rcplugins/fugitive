" Fugitive - Interact with git via Vim

Bundle "tpope/vim-fugitive"

nmap <LEADER>st :only<CR>:Gstatus<CR>
nmap <LEADER>df :GitDiff<cr>
nmap <LEADER>gb :Gblame<CR>

function! s:GitDiff()
  nmap <leader>nd ]s
  nmap <leader>dp :diffput 1<cr>
  Gdiff
endfunction

command! GitDiff call s:GitDiff()
autocmd FileType gitcommit setl spell
autocmd BufRead,BufNewFile */.git/COMMIT_EDITMSG wincmd _


" Fancy git conflict resolution
function! s:Conflicted()
  args `git ls-files -u \| awk '{print $4}' \| sort -u`
  " Merger
endfunction

function! s:TabEdit(parent)
  Gtabedit :1
  diffthis
  execute 'Gvsplit :' . {'upstream': 2, 'local': 3}[a:parent]
  diffthis
  wincmd r
endfunction

function! s:Merger()
  Gdiff
  call s:TabEdit('upstream')
  call s:TabEdit('local')
  tabfirst
endfunction

" Fast editing of conflicted files during a git rebase or merge
function! s:GitNextConflict()
  Gwrite
  argdelete %
  call s:NextOrQuit()
endfunction

function! s:NextOrQuit()
  if empty(argv())
    quit
  else
    bdelete
    Merger
  endif
endfunction

command! Conflicted call <sid>Conflicted()
command! Merger call <sid>Merger()
command! GitNextConflict call <sid>GitNextConflict()
nnoremap <leader>gnc :GitNextConflict<cr>

" vim:ft=vim
