" Prose (blogging, readmes, any other markdown) configurations
"------------------------

" Setup spell checking, and use <Ctrl>s to open spelling completion menu
au filetype markdown call MarkdownMode()

if exists("+spelllang")
    set spelllang=en_us
endif
set spellfile=~/.vim/spell/en.utf-8.add

nnoremap <LEADER>more i<!--more--><ESC>
nnoremap <leader>gf gqip

function! WrapCurrentWord(format)
  normal! gv
  if a:format == 'bold'
    let wrapping = '**'
  else
    let wrapping = '_'
  endif

  execute 'normal! "ac' . wrapping . 'a' . wrapping
endfunction

vnoremap <C-b> :call WrapCurrentWord("bold")<cr>
vnoremap <C-i> :call WrapCurrentWord("italic")<cr>

function! MarkdownMode()
    setl spell              " Enable spell checking
    nnoremap <buffer> <leader>ns ]s
    nnoremap <buffer> <leader>sp ea<C-x><C-s>
    nnoremap <buffer> <LEADER>more i<!--more--><ESC>
    nnoremap <buffer> <leader>gf gqip
    nnoremap <buffer> <leader>mkd :call OpenCurrentFileInMarked()<cr>
    nnoremap <buffer> <leader>bld mm"bciw**b**<esc>`m2l
    nnoremap <buffer> <leader>em mm"bciw*b*<esc>`m2l
endfunction

function! OpenCurrentFileInMarked()
    let current_file = expand('%')
    let open_cmd = join(["open -a Marked", current_file])
    call system(open_cmd)
endfunction

" Create a markdown formatted link with the visually selected word as the
" anchor text. If auto_link == 1, then use the current item in the system
" clipboard, else prompt for the URL
function! ConvertVisualSelectionToLink(auto_link)
    normal! gv
    if a:auto_link
      normal! "lc[l](=system('pbpaste'))
    else
      let url = input("URL: ")
      if url != ''
        execute 'normal! "lc[l](' . url . ')'
      endif
    endif
endfunction

" vnoremap <C-k> :call ConvertVisualSelectionToLink(1)<cr>
vnoremap <C-k> :call ConvertVisualSelectionToLink(0)<cr>

" vim:ft=vim
